"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./utils/dateCalculations.ts":
/*!***********************************!*\
  !*** ./utils/dateCalculations.ts ***!
  \***********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   calculateAge: function() { return /* binding */ calculateAge; },\n/* harmony export */   calculateAnnualIncreasePercentage: function() { return /* binding */ calculateAnnualIncreasePercentage; },\n/* harmony export */   calculateMaxTerm: function() { return /* binding */ calculateMaxTerm; },\n/* harmony export */   calculatePaymentEndDate: function() { return /* binding */ calculatePaymentEndDate; },\n/* harmony export */   calculatePaymentInfo: function() { return /* binding */ calculatePaymentInfo; },\n/* harmony export */   calculatePaymentStartDate: function() { return /* binding */ calculatePaymentStartDate; }\n/* harmony export */ });\n// ========================================\n// ðŸ“… Date & Age Calculation Utilities\n// ========================================\n/**\r\n * Calculate age from date of birth\r\n * @param dob - Date of birth in MM/DD/YYYY format\r\n * @returns Age in years (defaults to 50 if DOB is missing/empty/unknown)\r\n */ function calculateAge(dob) {\n    if (!dob || dob.trim() === \"\" || dob.toLowerCase() === \"unknown\") return 50 // Default to 50 years old for calculations\n    ;\n    try {\n        const dobDate = new Date(dob);\n        const today = new Date();\n        let age = today.getFullYear() - dobDate.getFullYear();\n        const monthDiff = today.getMonth() - dobDate.getMonth();\n        // Adjust if birthday hasn't occurred yet this year\n        if (monthDiff < 0 || monthDiff === 0 && today.getDate() < dobDate.getDate()) {\n            age--;\n        }\n        return age;\n    } catch (error) {\n        return 50 // Default to 50 years old if DOB parsing fails\n        ;\n    }\n}\n/**\r\n * Calculate payment start date based on frequency\r\n * @param frequency - Payment frequency (Annual, Monthly, Quarterly, etc.)\r\n * @returns Date string in MM/DD/YYYY format\r\n */ function calculatePaymentStartDate() {\n    let frequency = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : \"Monthly\";\n    const today = new Date();\n    const startDate = new Date(today);\n    switch(frequency.toLowerCase()){\n        case \"annual\":\n            // Add 1 year for annual payments\n            startDate.setFullYear(startDate.getFullYear() + 1);\n            break;\n        case \"semi-annually\":\n        case \"semi-annual\":\n            // Add 6 months for semi-annual payments\n            startDate.setMonth(startDate.getMonth() + 6);\n            break;\n        case \"quarterly\":\n            // Add 3 months for quarterly payments\n            startDate.setMonth(startDate.getMonth() + 3);\n            break;\n        case \"monthly\":\n        default:\n            // Add 6 months for monthly payments (current default)\n            startDate.setMonth(startDate.getMonth() + 6);\n            break;\n    }\n    return formatDate(startDate);\n}\n/**\r\n * Calculate maximum term length based on age\r\n * Maximum term is 30 years, but cannot exceed age 75\r\n * @param age - Current age in years\r\n * @returns Maximum term length in years\r\n */ function calculateMaxTerm(age) {\n    if (age <= 0) return 0;\n    if (age >= 75) return 0;\n    const maxTerm = 30;\n    const yearsUntil75 = 75 - age;\n    return Math.min(maxTerm, yearsUntil75);\n}\n/**\r\n * Calculate payment end date based on age and start date\r\n * @param age - Current age in years\r\n * @param startDate - Payment start date in MM/DD/YYYY format\r\n * @returns Payment end date in MM/DD/YYYY format\r\n */ function calculatePaymentEndDate(age, startDate) {\n    if (!startDate || startDate.trim() === \"\" || age <= 0) return \"\";\n    try {\n        const maxTerm = calculateMaxTerm(age);\n        if (maxTerm === 0) return \"\";\n        const start = new Date(startDate);\n        const endDate = new Date(start);\n        // Add the term length in years\n        endDate.setFullYear(endDate.getFullYear() + maxTerm);\n        return formatDate(endDate);\n    } catch (error) {\n        return \"\";\n    }\n}\n/**\r\n * Format date to MM/DD/YYYY string\r\n * @param date - Date object\r\n * @returns Formatted date string\r\n */ function formatDate(date) {\n    const month = String(date.getMonth() + 1).padStart(2, \"0\");\n    const day = String(date.getDate()).padStart(2, \"0\");\n    const year = date.getFullYear();\n    return \"\".concat(month, \"/\").concat(day, \"/\").concat(year);\n}\n/**\r\n * Calculate annual increase percentage between two payment amounts\r\n * @param oldAmount - Original payment amount (e.g., $11,610.60)\r\n * @param newAmount - New payment amount after increase (e.g., $11,958.92)\r\n * @returns Annual increase percentage (e.g., 3.00)\r\n */ function calculateAnnualIncreasePercentage(oldAmount, newAmount) {\n    try {\n        // Convert to numbers and remove any currency symbols, commas\n        const oldNum = typeof oldAmount === \"string\" ? parseFloat(oldAmount.replace(/[$,]/g, \"\")) : oldAmount;\n        const newNum = typeof newAmount === \"string\" ? parseFloat(newAmount.replace(/[$,]/g, \"\")) : newAmount;\n        if (isNaN(oldNum) || isNaN(newNum) || oldNum <= 0) {\n            return 0;\n        }\n        // Calculate percentage increase: ((new - old) / old) * 100\n        const percentageIncrease = (newNum - oldNum) / oldNum * 100;\n        // Round to 2 decimal places\n        return Math.round(percentageIncrease * 100) / 100;\n    } catch (error) {\n        return 0;\n    }\n}\n/**\r\n * Calculate all payment-related dates and info\r\n * @param dob - Date of birth in MM/DD/YYYY format\r\n * @param frequency - Payment frequency for start date calculation\r\n * @returns Object with age, start date, end date, and term length\r\n */ function calculatePaymentInfo(dob) {\n    let frequency = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : \"Monthly\";\n    const age = calculateAge(dob);\n    const startDate = calculatePaymentStartDate(frequency);\n    const maxTerm = calculateMaxTerm(age);\n    const endDate = calculatePaymentEndDate(age, startDate);\n    return {\n        age,\n        startDate,\n        endDate,\n        maxTerm,\n        endAge: age + maxTerm\n    };\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./utils/dateCalculations.ts\n"));

/***/ })

});