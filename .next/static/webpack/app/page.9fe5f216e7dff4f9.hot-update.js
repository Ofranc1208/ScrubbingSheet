"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./utils/parsers/clientInfoParser.ts":
/*!*******************************************!*\
  !*** ./utils/parsers/clientInfoParser.ts ***!
  \*******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseClientInfo: function() { return /* binding */ parseClientInfo; }\n/* harmony export */ });\n/**\r\n * Parser for client information (CRM ID, Name, SSN, DOB, Gender)\r\n */ function parseClientInfo(rawText) {\n    const result = {};\n    // Extract CRM ID from patterns like \"ID=781618\" or \"(ID=781618)\"\n    const idMatch = rawText.match(/\\(ID=(\\d+)\\)/) || rawText.match(/ID[:\\s=]+(\\d+)/);\n    if (idMatch) {\n        result.crmId = idMatch[1];\n    }\n    // Extract full name from \"Name:\" pattern using string manipulation\n    // Find the position of \"Name:\" and extract the next 2 alphabetic words\n    const nameIndex = rawText.indexOf(\"Name:\");\n    if (nameIndex !== -1) {\n        const afterName = rawText.substring(nameIndex + 5) // Skip \"Name:\"\n        ;\n        const words = afterName.split(/\\s+/).filter((word)=>/^[A-Za-z]+$/.test(word));\n        if (words.length >= 2) {\n            result.firstName = words[0];\n            result.lastName = words[1];\n        }\n    }\n    // Fallback: Try to match \"FirstName LastName\" on single line or combined format\n    if (!result.lastName && result.firstName) {\n        const singleLineMatch = rawText.match(/Name:\\s*([A-Za-z]+)\\s+([A-Za-z]+)/);\n        if (singleLineMatch) {\n            result.firstName = singleLineMatch[1];\n            result.lastName = singleLineMatch[2];\n        }\n    }\n    // Extract Gender from \"Gen:\" or \"Gender:\" pattern\n    // Default to \"Unknown\" if not Male or Female\n    const genderMatch = rawText.match(/Gen(?:der)?:\\s*\\n?\\s*([A-Za-z]+)/i);\n    if (genderMatch) {\n        const gender = genderMatch[1].toLowerCase();\n        if (gender.startsWith(\"m\")) {\n            result.gender = \"Male\";\n        } else if (gender.startsWith(\"f\")) {\n            result.gender = \"Female\";\n        } else {\n            result.gender = \"Unknown\";\n        }\n    } else {\n        // If no gender field found at all, default to Unknown\n        result.gender = \"Unknown\";\n    }\n    // Extract SSN from pattern \"SSN: 454-65-1908\" or \"SSN:      \\t454-65-1908\"\n    const ssnMatch = rawText.match(/SSN:?\\s*\\n?\\s*(\\d{3}[-\\s]?\\d{2}[-\\s]?\\d{4})/);\n    if (ssnMatch) {\n        // Normalize SSN format to XXX-XX-XXXX\n        const ssn = ssnMatch[1].replace(/\\s/g, \"\").replace(/(\\d{3})(\\d{2})(\\d{4})/, \"$1-$2-$3\");\n        result.ssn = ssn;\n    } else {\n        // If no SSN found, set to Unknown\n        result.ssn = \"Unknown\";\n    }\n    // Extract DOB from pattern \"DOB: 2/16/1968\"\n    const dobMatch = rawText.match(/DOB:?\\s*\\n?\\s*(\\d{1,2}\\/\\d{1,2}\\/\\d{4})/);\n    if (dobMatch) {\n        result.dob = dobMatch[1];\n    } else {\n        // If no DOB found, set to Unknown\n        result.dob = \"Unknown\";\n    }\n    return result;\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3V0aWxzL3BhcnNlcnMvY2xpZW50SW5mb1BhcnNlci50cyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7O0NBRUMsR0FFTSxTQUFTQSxnQkFBZ0JDLE9BQWU7SUFRN0MsTUFBTUMsU0FBYyxDQUFDO0lBRXJCLGlFQUFpRTtJQUNqRSxNQUFNQyxVQUFVRixRQUFRRyxLQUFLLENBQUMsbUJBQW1CSCxRQUFRRyxLQUFLLENBQUM7SUFDL0QsSUFBSUQsU0FBUztRQUNYRCxPQUFPRyxLQUFLLEdBQUdGLE9BQU8sQ0FBQyxFQUFFO0lBQzNCO0lBRUEsbUVBQW1FO0lBQ25FLHVFQUF1RTtJQUN2RSxNQUFNRyxZQUFZTCxRQUFRTSxPQUFPLENBQUM7SUFDbEMsSUFBSUQsY0FBYyxDQUFDLEdBQUc7UUFDcEIsTUFBTUUsWUFBWVAsUUFBUVEsU0FBUyxDQUFDSCxZQUFZLEdBQUcsZUFBZTs7UUFDbEUsTUFBTUksUUFBUUYsVUFBVUcsS0FBSyxDQUFDLE9BQU9DLE1BQU0sQ0FBQ0MsQ0FBQUEsT0FBUSxjQUFjQyxJQUFJLENBQUNEO1FBRXZFLElBQUlILE1BQU1LLE1BQU0sSUFBSSxHQUFHO1lBQ3JCYixPQUFPYyxTQUFTLEdBQUdOLEtBQUssQ0FBQyxFQUFFO1lBQzNCUixPQUFPZSxRQUFRLEdBQUdQLEtBQUssQ0FBQyxFQUFFO1FBQzVCO0lBQ0Y7SUFFQSxnRkFBZ0Y7SUFDaEYsSUFBSSxDQUFDUixPQUFPZSxRQUFRLElBQUlmLE9BQU9jLFNBQVMsRUFBRTtRQUN4QyxNQUFNRSxrQkFBa0JqQixRQUFRRyxLQUFLLENBQUM7UUFDdEMsSUFBSWMsaUJBQWlCO1lBQ25CaEIsT0FBT2MsU0FBUyxHQUFHRSxlQUFlLENBQUMsRUFBRTtZQUNyQ2hCLE9BQU9lLFFBQVEsR0FBR0MsZUFBZSxDQUFDLEVBQUU7UUFDdEM7SUFDRjtJQUVBLGtEQUFrRDtJQUNsRCw2Q0FBNkM7SUFDN0MsTUFBTUMsY0FBY2xCLFFBQVFHLEtBQUssQ0FBQztJQUNsQyxJQUFJZSxhQUFhO1FBQ2YsTUFBTUMsU0FBU0QsV0FBVyxDQUFDLEVBQUUsQ0FBQ0UsV0FBVztRQUN6QyxJQUFJRCxPQUFPRSxVQUFVLENBQUMsTUFBTTtZQUMxQnBCLE9BQU9rQixNQUFNLEdBQUc7UUFDbEIsT0FBTyxJQUFJQSxPQUFPRSxVQUFVLENBQUMsTUFBTTtZQUNqQ3BCLE9BQU9rQixNQUFNLEdBQUc7UUFDbEIsT0FBTztZQUNMbEIsT0FBT2tCLE1BQU0sR0FBRztRQUNsQjtJQUNGLE9BQU87UUFDTCxzREFBc0Q7UUFDdERsQixPQUFPa0IsTUFBTSxHQUFHO0lBQ2xCO0lBRUEsMkVBQTJFO0lBQzNFLE1BQU1HLFdBQVd0QixRQUFRRyxLQUFLLENBQUM7SUFDL0IsSUFBSW1CLFVBQVU7UUFDWixzQ0FBc0M7UUFDdEMsTUFBTUMsTUFBTUQsUUFBUSxDQUFDLEVBQUUsQ0FBQ0UsT0FBTyxDQUFDLE9BQU8sSUFBSUEsT0FBTyxDQUFDLHlCQUF5QjtRQUM1RXZCLE9BQU9zQixHQUFHLEdBQUdBO0lBQ2YsT0FBTztRQUNMLGtDQUFrQztRQUNsQ3RCLE9BQU9zQixHQUFHLEdBQUc7SUFDZjtJQUVBLDRDQUE0QztJQUM1QyxNQUFNRSxXQUFXekIsUUFBUUcsS0FBSyxDQUFDO0lBQy9CLElBQUlzQixVQUFVO1FBQ1p4QixPQUFPeUIsR0FBRyxHQUFHRCxRQUFRLENBQUMsRUFBRTtJQUMxQixPQUFPO1FBQ0wsa0NBQWtDO1FBQ2xDeEIsT0FBT3lCLEdBQUcsR0FBRztJQUNmO0lBRUEsT0FBT3pCO0FBQ1QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vdXRpbHMvcGFyc2Vycy9jbGllbnRJbmZvUGFyc2VyLnRzPzU0NGQiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIFBhcnNlciBmb3IgY2xpZW50IGluZm9ybWF0aW9uIChDUk0gSUQsIE5hbWUsIFNTTiwgRE9CLCBHZW5kZXIpXHJcbiAqL1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlQ2xpZW50SW5mbyhyYXdUZXh0OiBzdHJpbmcpOiB7XHJcbiAgY3JtSWQ/OiBzdHJpbmdcclxuICBmaXJzdE5hbWU/OiBzdHJpbmdcclxuICBsYXN0TmFtZT86IHN0cmluZ1xyXG4gIHNzbj86IHN0cmluZ1xyXG4gIGRvYj86IHN0cmluZ1xyXG4gIGdlbmRlcj86IHN0cmluZ1xyXG59IHtcclxuICBjb25zdCByZXN1bHQ6IGFueSA9IHt9XHJcblxyXG4gIC8vIEV4dHJhY3QgQ1JNIElEIGZyb20gcGF0dGVybnMgbGlrZSBcIklEPTc4MTYxOFwiIG9yIFwiKElEPTc4MTYxOClcIlxyXG4gIGNvbnN0IGlkTWF0Y2ggPSByYXdUZXh0Lm1hdGNoKC9cXChJRD0oXFxkKylcXCkvKSB8fCByYXdUZXh0Lm1hdGNoKC9JRFs6XFxzPV0rKFxcZCspLylcclxuICBpZiAoaWRNYXRjaCkge1xyXG4gICAgcmVzdWx0LmNybUlkID0gaWRNYXRjaFsxXVxyXG4gIH1cclxuXHJcbiAgLy8gRXh0cmFjdCBmdWxsIG5hbWUgZnJvbSBcIk5hbWU6XCIgcGF0dGVybiB1c2luZyBzdHJpbmcgbWFuaXB1bGF0aW9uXHJcbiAgLy8gRmluZCB0aGUgcG9zaXRpb24gb2YgXCJOYW1lOlwiIGFuZCBleHRyYWN0IHRoZSBuZXh0IDIgYWxwaGFiZXRpYyB3b3Jkc1xyXG4gIGNvbnN0IG5hbWVJbmRleCA9IHJhd1RleHQuaW5kZXhPZignTmFtZTonKVxyXG4gIGlmIChuYW1lSW5kZXggIT09IC0xKSB7XHJcbiAgICBjb25zdCBhZnRlck5hbWUgPSByYXdUZXh0LnN1YnN0cmluZyhuYW1lSW5kZXggKyA1KSAvLyBTa2lwIFwiTmFtZTpcIlxyXG4gICAgY29uc3Qgd29yZHMgPSBhZnRlck5hbWUuc3BsaXQoL1xccysvKS5maWx0ZXIod29yZCA9PiAvXltBLVphLXpdKyQvLnRlc3Qod29yZCkpXHJcblxyXG4gICAgaWYgKHdvcmRzLmxlbmd0aCA+PSAyKSB7XHJcbiAgICAgIHJlc3VsdC5maXJzdE5hbWUgPSB3b3Jkc1swXVxyXG4gICAgICByZXN1bHQubGFzdE5hbWUgPSB3b3Jkc1sxXVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLy8gRmFsbGJhY2s6IFRyeSB0byBtYXRjaCBcIkZpcnN0TmFtZSBMYXN0TmFtZVwiIG9uIHNpbmdsZSBsaW5lIG9yIGNvbWJpbmVkIGZvcm1hdFxyXG4gIGlmICghcmVzdWx0Lmxhc3ROYW1lICYmIHJlc3VsdC5maXJzdE5hbWUpIHtcclxuICAgIGNvbnN0IHNpbmdsZUxpbmVNYXRjaCA9IHJhd1RleHQubWF0Y2goL05hbWU6XFxzKihbQS1aYS16XSspXFxzKyhbQS1aYS16XSspLylcclxuICAgIGlmIChzaW5nbGVMaW5lTWF0Y2gpIHtcclxuICAgICAgcmVzdWx0LmZpcnN0TmFtZSA9IHNpbmdsZUxpbmVNYXRjaFsxXVxyXG4gICAgICByZXN1bHQubGFzdE5hbWUgPSBzaW5nbGVMaW5lTWF0Y2hbMl1cclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8vIEV4dHJhY3QgR2VuZGVyIGZyb20gXCJHZW46XCIgb3IgXCJHZW5kZXI6XCIgcGF0dGVyblxyXG4gIC8vIERlZmF1bHQgdG8gXCJVbmtub3duXCIgaWYgbm90IE1hbGUgb3IgRmVtYWxlXHJcbiAgY29uc3QgZ2VuZGVyTWF0Y2ggPSByYXdUZXh0Lm1hdGNoKC9HZW4oPzpkZXIpPzpcXHMqXFxuP1xccyooW0EtWmEtel0rKS9pKVxyXG4gIGlmIChnZW5kZXJNYXRjaCkge1xyXG4gICAgY29uc3QgZ2VuZGVyID0gZ2VuZGVyTWF0Y2hbMV0udG9Mb3dlckNhc2UoKVxyXG4gICAgaWYgKGdlbmRlci5zdGFydHNXaXRoKCdtJykpIHtcclxuICAgICAgcmVzdWx0LmdlbmRlciA9ICdNYWxlJ1xyXG4gICAgfSBlbHNlIGlmIChnZW5kZXIuc3RhcnRzV2l0aCgnZicpKSB7XHJcbiAgICAgIHJlc3VsdC5nZW5kZXIgPSAnRmVtYWxlJ1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgcmVzdWx0LmdlbmRlciA9ICdVbmtub3duJ1xyXG4gICAgfVxyXG4gIH0gZWxzZSB7XHJcbiAgICAvLyBJZiBubyBnZW5kZXIgZmllbGQgZm91bmQgYXQgYWxsLCBkZWZhdWx0IHRvIFVua25vd25cclxuICAgIHJlc3VsdC5nZW5kZXIgPSAnVW5rbm93bidcclxuICB9XHJcblxyXG4gIC8vIEV4dHJhY3QgU1NOIGZyb20gcGF0dGVybiBcIlNTTjogNDU0LTY1LTE5MDhcIiBvciBcIlNTTjogICAgICBcXHQ0NTQtNjUtMTkwOFwiXHJcbiAgY29uc3Qgc3NuTWF0Y2ggPSByYXdUZXh0Lm1hdGNoKC9TU046P1xccypcXG4/XFxzKihcXGR7M31bLVxcc10/XFxkezJ9Wy1cXHNdP1xcZHs0fSkvKVxyXG4gIGlmIChzc25NYXRjaCkge1xyXG4gICAgLy8gTm9ybWFsaXplIFNTTiBmb3JtYXQgdG8gWFhYLVhYLVhYWFhcclxuICAgIGNvbnN0IHNzbiA9IHNzbk1hdGNoWzFdLnJlcGxhY2UoL1xccy9nLCAnJykucmVwbGFjZSgvKFxcZHszfSkoXFxkezJ9KShcXGR7NH0pLywgJyQxLSQyLSQzJylcclxuICAgIHJlc3VsdC5zc24gPSBzc25cclxuICB9IGVsc2Uge1xyXG4gICAgLy8gSWYgbm8gU1NOIGZvdW5kLCBzZXQgdG8gVW5rbm93blxyXG4gICAgcmVzdWx0LnNzbiA9ICdVbmtub3duJ1xyXG4gIH1cclxuXHJcbiAgLy8gRXh0cmFjdCBET0IgZnJvbSBwYXR0ZXJuIFwiRE9COiAyLzE2LzE5NjhcIlxyXG4gIGNvbnN0IGRvYk1hdGNoID0gcmF3VGV4dC5tYXRjaCgvRE9COj9cXHMqXFxuP1xccyooXFxkezEsMn1cXC9cXGR7MSwyfVxcL1xcZHs0fSkvKVxyXG4gIGlmIChkb2JNYXRjaCkge1xyXG4gICAgcmVzdWx0LmRvYiA9IGRvYk1hdGNoWzFdXHJcbiAgfSBlbHNlIHtcclxuICAgIC8vIElmIG5vIERPQiBmb3VuZCwgc2V0IHRvIFVua25vd25cclxuICAgIHJlc3VsdC5kb2IgPSAnVW5rbm93bidcclxuICB9XHJcblxyXG4gIHJldHVybiByZXN1bHRcclxufVxyXG5cclxuIl0sIm5hbWVzIjpbInBhcnNlQ2xpZW50SW5mbyIsInJhd1RleHQiLCJyZXN1bHQiLCJpZE1hdGNoIiwibWF0Y2giLCJjcm1JZCIsIm5hbWVJbmRleCIsImluZGV4T2YiLCJhZnRlck5hbWUiLCJzdWJzdHJpbmciLCJ3b3JkcyIsInNwbGl0IiwiZmlsdGVyIiwid29yZCIsInRlc3QiLCJsZW5ndGgiLCJmaXJzdE5hbWUiLCJsYXN0TmFtZSIsInNpbmdsZUxpbmVNYXRjaCIsImdlbmRlck1hdGNoIiwiZ2VuZGVyIiwidG9Mb3dlckNhc2UiLCJzdGFydHNXaXRoIiwic3NuTWF0Y2giLCJzc24iLCJyZXBsYWNlIiwiZG9iTWF0Y2giLCJkb2IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./utils/parsers/clientInfoParser.ts\n"));

/***/ })

});