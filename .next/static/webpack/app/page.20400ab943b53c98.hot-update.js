"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./utils/accessDataParser.ts":
/*!***********************************!*\
  !*** ./utils/accessDataParser.ts ***!
  \***********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   formatExtractedDataForPreview: function() { return /* binding */ formatExtractedDataForPreview; },\n/* harmony export */   parseAccessData: function() { return /* binding */ parseAccessData; },\n/* harmony export */   validateExtractedData: function() { return /* binding */ validateExtractedData; }\n/* harmony export */ });\n/* harmony import */ var _parsers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./parsers */ \"(app-pages-browser)/./utils/parsers/index.ts\");\n/* harmony import */ var _dateCalculations__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dateCalculations */ \"(app-pages-browser)/./utils/dateCalculations.ts\");\n/**\n * Access Data Parser - Orchestrator\n * Coordinates specialized parsers to extract data from Microsoft Access database\n * \n * Architecture: Orchestrator Pattern\n * - Delegates to specialized parsers in /parsers subfolder\n * - Each parser handles a single responsibility\n * - Easy to maintain, test, and extend\n */ \n\n/**\n * Parse raw Access database text and extract relevant fields\n * \n * Orchestrates specialized parsers:\n * - clientInfoParser: CRM ID, name, SSN, DOB, gender\n * - contactParser: phone numbers (3), email\n * - addressParser: street, city, state, ZIP\n * - insuranceParser: insurance company name\n * - paymentParser: LCP amount, frequency, annual increase\n */ function parseAccessData(rawText) {\n    if (!rawText || rawText.trim().length === 0) {\n        return null;\n    }\n    // Orchestrate: Delegate to specialized parsers\n    const extracted = {\n        ...(0,_parsers__WEBPACK_IMPORTED_MODULE_0__.parseClientInfo)(rawText),\n        ...(0,_parsers__WEBPACK_IMPORTED_MODULE_0__.parseContact)(rawText),\n        ...(0,_parsers__WEBPACK_IMPORTED_MODULE_0__.parseAddress)(rawText),\n        ...(0,_parsers__WEBPACK_IMPORTED_MODULE_0__.parseInsurance)(rawText),\n        ...(0,_parsers__WEBPACK_IMPORTED_MODULE_0__.parsePayment)(rawText)\n    };\n    // Post-processing: Calculate End Date using 30-year rule from TODAY\n    // Rule: End Date = TODAY + MIN(30 years, 75 - current age)\n    // This is INDEPENDENT of when payments start\n    // Always calculate, even if DOB is missing (will default to age 55)\n    const age = (0,_dateCalculations__WEBPACK_IMPORTED_MODULE_1__.calculateAge)(extracted.dob || \"\");\n    const today = new Date();\n    // Calculate years until age 75\n    const yearsUntil75 = 75 - age;\n    // Term cannot exceed 30 years OR age 75, whichever comes first\n    const termYears = Math.min(30, yearsUntil75);\n    // End Date = Today + term years\n    const endDate = new Date(today.getFullYear() + termYears, today.getMonth(), today.getDate());\n    extracted.paymentEndDate = \"\".concat(endDate.getMonth() + 1, \"/\").concat(endDate.getDate(), \"/\").concat(endDate.getFullYear());\n    // Also set the age field for display purposes\n    extracted.age = age.toString();\n    // Validation: Return null if we couldn't extract minimum required fields\n    if (!extracted.crmId && !extracted.firstName && !extracted.lastName) {\n        return null;\n    }\n    return extracted;\n}\n/**\n * Validate extracted data and return missing fields\n */ function validateExtractedData(data) {\n    if (!data) return [\n        \"No data could be extracted\"\n    ];\n    const missing = [];\n    const requiredFields = [\n        {\n            key: \"crmId\",\n            label: \"CRM ID\"\n        },\n        {\n            key: \"firstName\",\n            label: \"First Name\"\n        },\n        {\n            key: \"lastName\",\n            label: \"Last Name\"\n        },\n        {\n            key: \"ssn\",\n            label: \"SSN\"\n        },\n        {\n            key: \"dob\",\n            label: \"Date of Birth\"\n        }\n    ];\n    requiredFields.forEach((field)=>{\n        if (!data[field.key]) {\n            missing.push(field.label);\n        }\n    });\n    return missing;\n}\n/**\n * Format extracted data for display in preview\n */ function formatExtractedDataForPreview(data) {\n    if (!data) return [];\n    return [\n        [\n            \"CRM ID\",\n            data.crmId || \"\"\n        ],\n        [\n            \"Name\",\n            \"\".concat(data.firstName || \"\", \" \").concat(data.lastName || \"\")\n        ],\n        [\n            \"SSN\",\n            data.ssn || \"Unknown\"\n        ],\n        [\n            \"DOB\",\n            data.dob || \"Unknown\"\n        ],\n        [\n            \"Gender\",\n            data.gender || \"\"\n        ],\n        [\n            \"Phone 1 (Main)\",\n            data.phone1 || \"\"\n        ],\n        [\n            \"Phone 2\",\n            data.phone2 || \"\"\n        ],\n        [\n            \"Phone 3\",\n            data.phone3 || \"\"\n        ],\n        [\n            \"Email\",\n            data.email || \"\"\n        ],\n        [\n            \"Address\",\n            data.streetAddress1 || \"\"\n        ],\n        [\n            \"City\",\n            data.city || \"\"\n        ],\n        [\n            \"State\",\n            data.state || \"\"\n        ],\n        [\n            \"ZIP\",\n            data.zipCode || \"\"\n        ],\n        [\n            \"Insurance\",\n            data.insuranceCompany || \"\"\n        ],\n        [\n            \"Payment Type\",\n            data.typeOfPayment || \"\"\n        ],\n        [\n            \"Payment Amount\",\n            data.paymentAmount || \"\"\n        ],\n        [\n            \"Frequency\",\n            data.paymentFrequency || \"\"\n        ],\n        [\n            \"Start Date\",\n            data.paymentStartDate || \"\"\n        ],\n        [\n            \"End Date\",\n            data.paymentEndDate || \"\"\n        ],\n        [\n            \"Annual Increase %\",\n            data.annualIncrease || \"0\"\n        ]\n    ];\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./utils/accessDataParser.ts\n"));

/***/ })

});