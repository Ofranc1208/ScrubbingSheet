"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./utils/parsers/clientInfoParser.ts":
/*!*******************************************!*\
  !*** ./utils/parsers/clientInfoParser.ts ***!
  \*******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseClientInfo: function() { return /* binding */ parseClientInfo; }\n/* harmony export */ });\n/**\r\n * Parser for client information (CRM ID, Name, SSN, DOB, Gender)\r\n */ function parseClientInfo(rawText) {\n    const result = {};\n    // Extract CRM ID from patterns like \"ID=781618\" or \"(ID=781618)\"\n    const idMatch = rawText.match(/\\(ID=(\\d+)\\)/) || rawText.match(/ID[:\\s=]+(\\d+)/);\n    if (idMatch) {\n        result.crmId = idMatch[1];\n    }\n    // Extract full name from \"Name:\" pattern\n    // Simple approach: look for Name: followed by 2 alphabetic strings, stopping at field boundaries\n    const nameMatch = rawText.match(RegExp(\"Name:\\\\s*\\\\n?\\\\s*([A-Za-z]+)\\\\s*\\\\n?\\\\s*([A-Za-z]+)(?=\\\\s*\\\\n?\\\\s*(?:[A-Za-z]*:|$))\", \"s\"));\n    if (nameMatch) {\n        result.firstName = nameMatch[1];\n        result.lastName = nameMatch[2];\n    }\n    // Fallback for different formatting\n    if (!result.lastName && result.firstName) {\n        // Try to find just 2 names after Name:\n        const fallbackMatch = rawText.match(RegExp(\"Name:\\\\s*\\\\n?\\\\s*([A-Za-z]+)\\\\s*\\\\n?\\\\s*([A-Za-z]+)(?=\\\\s*\\\\n?\\\\s*(?:\\\\w*:|$))\", \"s\"));\n        if (fallbackMatch) {\n            result.firstName = fallbackMatch[1];\n            result.lastName = fallbackMatch[2];\n        }\n    }\n    // Fallback: Try to match \"FirstName LastName\" on single line or combined format\n    if (!result.lastName && result.firstName) {\n        const singleLineMatch = rawText.match(/Name:\\s*([A-Za-z]+)\\s+([A-Za-z]+)/);\n        if (singleLineMatch) {\n            result.firstName = singleLineMatch[1];\n            result.lastName = singleLineMatch[2];\n        }\n    }\n    // Extract Gender from \"Gen:\" or \"Gender:\" pattern\n    // Default to \"Unknown\" if not Male or Female\n    const genderMatch = rawText.match(/Gen(?:der)?:\\s*\\n?\\s*([A-Za-z]+)/i);\n    if (genderMatch) {\n        const gender = genderMatch[1].toLowerCase();\n        if (gender.startsWith(\"m\")) {\n            result.gender = \"Male\";\n        } else if (gender.startsWith(\"f\")) {\n            result.gender = \"Female\";\n        } else {\n            result.gender = \"Unknown\";\n        }\n    } else {\n        // If no gender field found at all, default to Unknown\n        result.gender = \"Unknown\";\n    }\n    // Extract SSN from pattern \"SSN: 454-65-1908\" or \"SSN:      \\t454-65-1908\"\n    const ssnMatch = rawText.match(/SSN:?\\s*\\n?\\s*(\\d{3}[-\\s]?\\d{2}[-\\s]?\\d{4})/);\n    if (ssnMatch) {\n        // Normalize SSN format to XXX-XX-XXXX\n        const ssn = ssnMatch[1].replace(/\\s/g, \"\").replace(/(\\d{3})(\\d{2})(\\d{4})/, \"$1-$2-$3\");\n        result.ssn = ssn;\n    }\n    // Extract DOB from pattern \"DOB: 2/16/1968\"\n    const dobMatch = rawText.match(/DOB:?\\s*\\n?\\s*(\\d{1,2}\\/\\d{1,2}\\/\\d{4})/);\n    if (dobMatch) {\n        result.dob = dobMatch[1];\n    }\n    return result;\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3V0aWxzL3BhcnNlcnMvY2xpZW50SW5mb1BhcnNlci50cyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7O0NBRUMsR0FFTSxTQUFTQSxnQkFBZ0JDLE9BQWU7SUFRN0MsTUFBTUMsU0FBYyxDQUFDO0lBRXJCLGlFQUFpRTtJQUNqRSxNQUFNQyxVQUFVRixRQUFRRyxLQUFLLENBQUMsbUJBQW1CSCxRQUFRRyxLQUFLLENBQUM7SUFDL0QsSUFBSUQsU0FBUztRQUNYRCxPQUFPRyxLQUFLLEdBQUdGLE9BQU8sQ0FBQyxFQUFFO0lBQzNCO0lBRUEseUNBQXlDO0lBQ3pDLGlHQUFpRztJQUNqRyxNQUFNRyxZQUFZTCxRQUFRRyxLQUFLLENBQUM7SUFDaEMsSUFBSUUsV0FBVztRQUNiSixPQUFPSyxTQUFTLEdBQUdELFNBQVMsQ0FBQyxFQUFFO1FBQy9CSixPQUFPTSxRQUFRLEdBQUdGLFNBQVMsQ0FBQyxFQUFFO0lBQ2hDO0lBRUEsb0NBQW9DO0lBQ3BDLElBQUksQ0FBQ0osT0FBT00sUUFBUSxJQUFJTixPQUFPSyxTQUFTLEVBQUU7UUFDeEMsdUNBQXVDO1FBQ3ZDLE1BQU1FLGdCQUFnQlIsUUFBUUcsS0FBSyxDQUFDO1FBQ3BDLElBQUlLLGVBQWU7WUFDakJQLE9BQU9LLFNBQVMsR0FBR0UsYUFBYSxDQUFDLEVBQUU7WUFDbkNQLE9BQU9NLFFBQVEsR0FBR0MsYUFBYSxDQUFDLEVBQUU7UUFDcEM7SUFDRjtJQUVBLGdGQUFnRjtJQUNoRixJQUFJLENBQUNQLE9BQU9NLFFBQVEsSUFBSU4sT0FBT0ssU0FBUyxFQUFFO1FBQ3hDLE1BQU1HLGtCQUFrQlQsUUFBUUcsS0FBSyxDQUFDO1FBQ3RDLElBQUlNLGlCQUFpQjtZQUNuQlIsT0FBT0ssU0FBUyxHQUFHRyxlQUFlLENBQUMsRUFBRTtZQUNyQ1IsT0FBT00sUUFBUSxHQUFHRSxlQUFlLENBQUMsRUFBRTtRQUN0QztJQUNGO0lBRUEsa0RBQWtEO0lBQ2xELDZDQUE2QztJQUM3QyxNQUFNQyxjQUFjVixRQUFRRyxLQUFLLENBQUM7SUFDbEMsSUFBSU8sYUFBYTtRQUNmLE1BQU1DLFNBQVNELFdBQVcsQ0FBQyxFQUFFLENBQUNFLFdBQVc7UUFDekMsSUFBSUQsT0FBT0UsVUFBVSxDQUFDLE1BQU07WUFDMUJaLE9BQU9VLE1BQU0sR0FBRztRQUNsQixPQUFPLElBQUlBLE9BQU9FLFVBQVUsQ0FBQyxNQUFNO1lBQ2pDWixPQUFPVSxNQUFNLEdBQUc7UUFDbEIsT0FBTztZQUNMVixPQUFPVSxNQUFNLEdBQUc7UUFDbEI7SUFDRixPQUFPO1FBQ0wsc0RBQXNEO1FBQ3REVixPQUFPVSxNQUFNLEdBQUc7SUFDbEI7SUFFQSwyRUFBMkU7SUFDM0UsTUFBTUcsV0FBV2QsUUFBUUcsS0FBSyxDQUFDO0lBQy9CLElBQUlXLFVBQVU7UUFDWixzQ0FBc0M7UUFDdEMsTUFBTUMsTUFBTUQsUUFBUSxDQUFDLEVBQUUsQ0FBQ0UsT0FBTyxDQUFDLE9BQU8sSUFBSUEsT0FBTyxDQUFDLHlCQUF5QjtRQUM1RWYsT0FBT2MsR0FBRyxHQUFHQTtJQUNmO0lBRUEsNENBQTRDO0lBQzVDLE1BQU1FLFdBQVdqQixRQUFRRyxLQUFLLENBQUM7SUFDL0IsSUFBSWMsVUFBVTtRQUNaaEIsT0FBT2lCLEdBQUcsR0FBR0QsUUFBUSxDQUFDLEVBQUU7SUFDMUI7SUFFQSxPQUFPaEI7QUFDVCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi91dGlscy9wYXJzZXJzL2NsaWVudEluZm9QYXJzZXIudHM/NTQ0ZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogUGFyc2VyIGZvciBjbGllbnQgaW5mb3JtYXRpb24gKENSTSBJRCwgTmFtZSwgU1NOLCBET0IsIEdlbmRlcilcclxuICovXHJcblxyXG5leHBvcnQgZnVuY3Rpb24gcGFyc2VDbGllbnRJbmZvKHJhd1RleHQ6IHN0cmluZyk6IHtcclxuICBjcm1JZD86IHN0cmluZ1xyXG4gIGZpcnN0TmFtZT86IHN0cmluZ1xyXG4gIGxhc3ROYW1lPzogc3RyaW5nXHJcbiAgc3NuPzogc3RyaW5nXHJcbiAgZG9iPzogc3RyaW5nXHJcbiAgZ2VuZGVyPzogc3RyaW5nXHJcbn0ge1xyXG4gIGNvbnN0IHJlc3VsdDogYW55ID0ge31cclxuXHJcbiAgLy8gRXh0cmFjdCBDUk0gSUQgZnJvbSBwYXR0ZXJucyBsaWtlIFwiSUQ9NzgxNjE4XCIgb3IgXCIoSUQ9NzgxNjE4KVwiXHJcbiAgY29uc3QgaWRNYXRjaCA9IHJhd1RleHQubWF0Y2goL1xcKElEPShcXGQrKVxcKS8pIHx8IHJhd1RleHQubWF0Y2goL0lEWzpcXHM9XSsoXFxkKykvKVxyXG4gIGlmIChpZE1hdGNoKSB7XHJcbiAgICByZXN1bHQuY3JtSWQgPSBpZE1hdGNoWzFdXHJcbiAgfVxyXG5cclxuICAvLyBFeHRyYWN0IGZ1bGwgbmFtZSBmcm9tIFwiTmFtZTpcIiBwYXR0ZXJuXHJcbiAgLy8gU2ltcGxlIGFwcHJvYWNoOiBsb29rIGZvciBOYW1lOiBmb2xsb3dlZCBieSAyIGFscGhhYmV0aWMgc3RyaW5ncywgc3RvcHBpbmcgYXQgZmllbGQgYm91bmRhcmllc1xyXG4gIGNvbnN0IG5hbWVNYXRjaCA9IHJhd1RleHQubWF0Y2goL05hbWU6XFxzKlxcbj9cXHMqKFtBLVphLXpdKylcXHMqXFxuP1xccyooW0EtWmEtel0rKSg/PVxccypcXG4/XFxzKig/OltBLVphLXpdKjp8JCkpL3MpXHJcbiAgaWYgKG5hbWVNYXRjaCkge1xyXG4gICAgcmVzdWx0LmZpcnN0TmFtZSA9IG5hbWVNYXRjaFsxXVxyXG4gICAgcmVzdWx0Lmxhc3ROYW1lID0gbmFtZU1hdGNoWzJdXHJcbiAgfVxyXG5cclxuICAvLyBGYWxsYmFjayBmb3IgZGlmZmVyZW50IGZvcm1hdHRpbmdcclxuICBpZiAoIXJlc3VsdC5sYXN0TmFtZSAmJiByZXN1bHQuZmlyc3ROYW1lKSB7XHJcbiAgICAvLyBUcnkgdG8gZmluZCBqdXN0IDIgbmFtZXMgYWZ0ZXIgTmFtZTpcclxuICAgIGNvbnN0IGZhbGxiYWNrTWF0Y2ggPSByYXdUZXh0Lm1hdGNoKC9OYW1lOlxccypcXG4/XFxzKihbQS1aYS16XSspXFxzKlxcbj9cXHMqKFtBLVphLXpdKykoPz1cXHMqXFxuP1xccyooPzpcXHcqOnwkKSkvcylcclxuICAgIGlmIChmYWxsYmFja01hdGNoKSB7XHJcbiAgICAgIHJlc3VsdC5maXJzdE5hbWUgPSBmYWxsYmFja01hdGNoWzFdXHJcbiAgICAgIHJlc3VsdC5sYXN0TmFtZSA9IGZhbGxiYWNrTWF0Y2hbMl1cclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8vIEZhbGxiYWNrOiBUcnkgdG8gbWF0Y2ggXCJGaXJzdE5hbWUgTGFzdE5hbWVcIiBvbiBzaW5nbGUgbGluZSBvciBjb21iaW5lZCBmb3JtYXRcclxuICBpZiAoIXJlc3VsdC5sYXN0TmFtZSAmJiByZXN1bHQuZmlyc3ROYW1lKSB7XHJcbiAgICBjb25zdCBzaW5nbGVMaW5lTWF0Y2ggPSByYXdUZXh0Lm1hdGNoKC9OYW1lOlxccyooW0EtWmEtel0rKVxccysoW0EtWmEtel0rKS8pXHJcbiAgICBpZiAoc2luZ2xlTGluZU1hdGNoKSB7XHJcbiAgICAgIHJlc3VsdC5maXJzdE5hbWUgPSBzaW5nbGVMaW5lTWF0Y2hbMV1cclxuICAgICAgcmVzdWx0Lmxhc3ROYW1lID0gc2luZ2xlTGluZU1hdGNoWzJdXHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvLyBFeHRyYWN0IEdlbmRlciBmcm9tIFwiR2VuOlwiIG9yIFwiR2VuZGVyOlwiIHBhdHRlcm5cclxuICAvLyBEZWZhdWx0IHRvIFwiVW5rbm93blwiIGlmIG5vdCBNYWxlIG9yIEZlbWFsZVxyXG4gIGNvbnN0IGdlbmRlck1hdGNoID0gcmF3VGV4dC5tYXRjaCgvR2VuKD86ZGVyKT86XFxzKlxcbj9cXHMqKFtBLVphLXpdKykvaSlcclxuICBpZiAoZ2VuZGVyTWF0Y2gpIHtcclxuICAgIGNvbnN0IGdlbmRlciA9IGdlbmRlck1hdGNoWzFdLnRvTG93ZXJDYXNlKClcclxuICAgIGlmIChnZW5kZXIuc3RhcnRzV2l0aCgnbScpKSB7XHJcbiAgICAgIHJlc3VsdC5nZW5kZXIgPSAnTWFsZSdcclxuICAgIH0gZWxzZSBpZiAoZ2VuZGVyLnN0YXJ0c1dpdGgoJ2YnKSkge1xyXG4gICAgICByZXN1bHQuZ2VuZGVyID0gJ0ZlbWFsZSdcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHJlc3VsdC5nZW5kZXIgPSAnVW5rbm93bidcclxuICAgIH1cclxuICB9IGVsc2Uge1xyXG4gICAgLy8gSWYgbm8gZ2VuZGVyIGZpZWxkIGZvdW5kIGF0IGFsbCwgZGVmYXVsdCB0byBVbmtub3duXHJcbiAgICByZXN1bHQuZ2VuZGVyID0gJ1Vua25vd24nXHJcbiAgfVxyXG5cclxuICAvLyBFeHRyYWN0IFNTTiBmcm9tIHBhdHRlcm4gXCJTU046IDQ1NC02NS0xOTA4XCIgb3IgXCJTU046ICAgICAgXFx0NDU0LTY1LTE5MDhcIlxyXG4gIGNvbnN0IHNzbk1hdGNoID0gcmF3VGV4dC5tYXRjaCgvU1NOOj9cXHMqXFxuP1xccyooXFxkezN9Wy1cXHNdP1xcZHsyfVstXFxzXT9cXGR7NH0pLylcclxuICBpZiAoc3NuTWF0Y2gpIHtcclxuICAgIC8vIE5vcm1hbGl6ZSBTU04gZm9ybWF0IHRvIFhYWC1YWC1YWFhYXHJcbiAgICBjb25zdCBzc24gPSBzc25NYXRjaFsxXS5yZXBsYWNlKC9cXHMvZywgJycpLnJlcGxhY2UoLyhcXGR7M30pKFxcZHsyfSkoXFxkezR9KS8sICckMS0kMi0kMycpXHJcbiAgICByZXN1bHQuc3NuID0gc3NuXHJcbiAgfVxyXG5cclxuICAvLyBFeHRyYWN0IERPQiBmcm9tIHBhdHRlcm4gXCJET0I6IDIvMTYvMTk2OFwiXHJcbiAgY29uc3QgZG9iTWF0Y2ggPSByYXdUZXh0Lm1hdGNoKC9ET0I6P1xccypcXG4/XFxzKihcXGR7MSwyfVxcL1xcZHsxLDJ9XFwvXFxkezR9KS8pXHJcbiAgaWYgKGRvYk1hdGNoKSB7XHJcbiAgICByZXN1bHQuZG9iID0gZG9iTWF0Y2hbMV1cclxuICB9XHJcblxyXG4gIHJldHVybiByZXN1bHRcclxufVxyXG5cclxuIl0sIm5hbWVzIjpbInBhcnNlQ2xpZW50SW5mbyIsInJhd1RleHQiLCJyZXN1bHQiLCJpZE1hdGNoIiwibWF0Y2giLCJjcm1JZCIsIm5hbWVNYXRjaCIsImZpcnN0TmFtZSIsImxhc3ROYW1lIiwiZmFsbGJhY2tNYXRjaCIsInNpbmdsZUxpbmVNYXRjaCIsImdlbmRlck1hdGNoIiwiZ2VuZGVyIiwidG9Mb3dlckNhc2UiLCJzdGFydHNXaXRoIiwic3NuTWF0Y2giLCJzc24iLCJyZXBsYWNlIiwiZG9iTWF0Y2giLCJkb2IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./utils/parsers/clientInfoParser.ts\n"));

/***/ })

});